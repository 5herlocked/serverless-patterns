{
  "title": "SQS to Lambda",
  "description": "Create a Lambda function to parse message received by an SQS queue.",
  "language": "Python",
  "level": "200",
  "framework": "Terraform",
  "introBox": {
    "headline": "How it works",
    "text": [
      "This sample project demonstrates how to use a Lambda function to parse messages when they are received by an SQS queue."
      "This sample project demonstrates how to use an AWS Step Functions state machine to query Athena and get the results. This pattern is leveraging the native integration between these 2 services which means only JSON-based, structured language is used to define the implementation.",
      "With Amazon Athena you can get up to 1000 results per invocation of the GetQueryResults method and this is the reason why the Step Function has a loop to get more results. The results are sent to a Map which can be configured to handle (the DoSomething state) the items in parallel or one by one by modifying the max_concurrency parameter.",
      "This pattern deploys one Step Functions, two S3 Buckets, one Glue table and one Glue database."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/sqs-lambda-terraform-python",
      "templateURL": "serverless-patterns/sqs-lambda-terraform-python",
      "projectFolder": "sqs-lambda-terrafom-python",
      "templateFile": "sqs-lambda-terraform-python/main.tf"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "SQS to Lambda pattern",
        "link": "https://serverlessland.com/patterns/sqs-lambda"
      }
    ]
  },
  "deploy": {
    "text": [
      "See the Github repo for detailed deployment instructions."
    ]
  },
  "testing": {
    "text": [
      "See the Github repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "See the Github repo for detailed cleanup instructions."
    ]
  },
  "authors": [
    {
      "name": "Nicolas Diez",
      "image": "",
      "bio": "AWS Proserve Consultant.",
      "linkedin": "nicolas-diez",
      "twitter": "@claque2000"
    }
  ]
}
